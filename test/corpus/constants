/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */


=================
Test a hex number
=================

const i32 hex_const = 0x0001F
const i32 negative_hex_constant = -0x0001F

---

(document
      (definition
        (const
          (field_type
            (primitive_type))
          (const_identifier)
          (const_value
            (number))))
      (definition
        (const
          (field_type
            (primitive_type))
          (const_identifier)
          (const_value
            (number)))))



============================
Test a const double exponent
============================

const double e10 = 1e10   // fails with 0.9.3 and earlier
const double e11 = -1e10

---

(document
      (definition
        (const
          (field_type
            (primitive_type))
          (const_identifier)
          (const_value
            (double))))
      (comment)
      (definition
        (const
          (field_type
            (primitive_type))
          (const_identifier)
          (const_value
            (double)))))



=================
Test a const uuid
=================

// uuids are accepted with or without curly braces
const uuid GEN_UUID =  '00000000-4444-CCCC-ffff-0123456789ab'
const uuid GEN_GUID = '{00112233-4455-6677-8899-aaBBccDDeeFF}'

const myUUID MY_UUID =  '00000000-4444-CCCC-ffff-0123456789ab'
const myUUID MY_GUID = '{00112233-4455-6677-8899-aaBBccDDeeFF}'

---

(document
      (comment)
      (definition
        (const
          (field_type
            (identifier))
          (const_identifier)
          (const_value
            (string_literal))))
      (definition
        (const
          (field_type
            (identifier))
          (const_identifier)
          (const_value
            (string_literal))))
      (definition
        (const
          (field_type
            (identifier))
          (const_identifier)
          (const_value
            (string_literal))))
      (definition
        (const
          (field_type
            (identifier))
          (const_identifier)
          (const_value
            (string_literal)))))



==========================
Test const container types
==========================

struct thing {
  1: i32  hello,
  2: i32  goodbye
  3: uuid id
  4: myUUID my_id
  5: optional myUUID my_optional_id
}


const map<i32, map<i32, i32>> GEN_MAPMAP = { 235 : { 532 : 53255, 235:235}}

const map<string,i32> GEN_MAP2 = { "hello" : 233, "lkj98d" : 853, 'lkjsdf' : 098325 }

const thing GEN_THING = { 'hello' : 325, 'goodbye' : 325352, 'id' : '{00112233-4455-6677-8899-aaBBccDDeeFF}', 'my_id': '00000000-4444-CCCC-ffff-0123456789ab', 'my_optional_id': '00000000-4444-CCCC-ffff-0123456789ab' }

const map<i32,thing> GEN_WHAT = { 35 : { 'hello' : 325, 'goodbye' : 325352, 'id' : '00000000-4444-CCCC-ffff-0123456789ab', 'my_id': '00000000-4444-CCCC-ffff-0123456789ab', 'my_optional_id': '00000000-4444-CCCC-ffff-0123456789ab' } }

const set<i32> GEN_SET = [ 235, 235, 53235 ]

const set<uuid> GUID_SET = [ '{00112233-4455-6677-8899-aaBBccDDeeFF}', '00000000-4444-CCCC-ffff-0123456789ab' ]

---

(document
      (definition
        (struct
          (type_identifier)
          (field
            (field_id
              (number))
            (field_type
              (primitive_type))
            (field_identifier)
            (list_separator))
          (field
            (field_id
              (number))
            (field_type
              (primitive_type))
            (field_identifier))
          (field
            (field_id
              (number))
            (field_type
              (identifier))
            (field_identifier))
          (field
            (field_id
              (number))
            (field_type
              (identifier))
            (field_identifier))
          (field
            (field_id
              (number))
            (field_modifier)
            (field_type
              (identifier))
            (field_identifier))))
      (definition
        (const
          (field_type
            (container_type
              (map_type
                (field_type
                  (primitive_type))
                (field_type
                  (container_type
                    (map_type
                      (field_type
                        (primitive_type))
                      (field_type
                        (primitive_type))))))))
          (const_identifier)
          (const_value
            (const_map
              (const_value
                (number))
              (const_value
                (const_map
                  (const_value
                    (number))
                  (const_value
                    (number))
                  (list_separator)
                  (const_value
                    (number))
                  (const_value
                    (number))))))))
      (definition
        (const
          (field_type
            (container_type
              (map_type
                (field_type
                  (primitive_type))
                (field_type
                  (primitive_type)))))
          (const_identifier)
          (const_value
            (const_map
              (const_value
                (string_literal))
              (const_value
                (number))
              (list_separator)
              (const_value
                (string_literal))
              (const_value
                (number))
              (list_separator)
              (const_value
                (string_literal))
              (const_value
                (number))))))
      (definition
        (const
          (field_type
            (identifier))
          (const_identifier)
          (const_value
            (const_map
              (const_value
                (string_literal))
              (const_value
                (number))
              (list_separator)
              (const_value
                (string_literal))
              (const_value
                (number))
              (list_separator)
              (const_value
                (string_literal))
              (const_value
                (string_literal))
              (list_separator)
              (const_value
                (string_literal))
              (const_value
                (string_literal))
              (list_separator)
              (const_value
                (string_literal))
              (const_value
                (string_literal))))))
      (definition
        (const
          (field_type
            (container_type
              (map_type
                (field_type
                  (primitive_type))
                (field_type
                  (identifier)))))
          (const_identifier)
          (const_value
            (const_map
              (const_value
                (number))
              (const_value
                (const_map
                  (const_value
                    (string_literal))
                  (const_value
                    (number))
                  (list_separator)
                  (const_value
                    (string_literal))
                  (const_value
                    (number))
                  (list_separator)
                  (const_value
                    (string_literal))
                  (const_value
                    (string_literal))
                  (list_separator)
                  (const_value
                    (string_literal))
                  (const_value
                    (string_literal))
                  (list_separator)
                  (const_value
                    (string_literal))
                  (const_value
                    (string_literal))))))))
      (definition
        (const
          (field_type
            (container_type
              (set_type
                (field_type
                  (primitive_type)))))
          (const_identifier)
          (const_value
            (const_list
              (const_value
                (number))
              (list_separator)
              (const_value
                (number))
              (list_separator)
              (const_value
                (number))))))
      (definition
        (const
          (field_type
            (container_type
              (set_type
                (field_type
                  (identifier)))))
          (const_identifier)
          (const_value
            (const_list
              (const_value
                (string_literal))
              (list_separator)
              (const_value
                (string_literal)))))))
