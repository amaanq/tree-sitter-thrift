{
  "name": "thrift",
  "word": "identifier",
  "rules": {
    "document": {
      "type": "SEQ",
      "members": [
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "header"
          }
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "definition"
          }
        }
      ]
    },
    "header": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "include"
        },
        {
          "type": "SYMBOL",
          "name": "cpp_include"
        },
        {
          "type": "SYMBOL",
          "name": "namespace"
        }
      ]
    },
    "include": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "include"
        },
        {
          "type": "SYMBOL",
          "name": "include_path"
        }
      ]
    },
    "cpp_include": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "cpp_include"
        },
        {
          "type": "SYMBOL",
          "name": "include_path"
        }
      ]
    },
    "namespace": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "namespace"
        },
        {
          "type": "SYMBOL",
          "name": "namespace_scope"
        },
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          },
          "named": true,
          "value": "namespace_definition"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "namespace_uri"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "namespace_scope": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "*"
        },
        {
          "type": "STRING",
          "value": "as3"
        },
        {
          "type": "STRING",
          "value": "c_glib"
        },
        {
          "type": "STRING",
          "value": "cl"
        },
        {
          "type": "STRING",
          "value": "cocoa"
        },
        {
          "type": "STRING",
          "value": "cpp"
        },
        {
          "type": "STRING",
          "value": "cpp2"
        },
        {
          "type": "STRING",
          "value": "cpp.noexist"
        },
        {
          "type": "STRING",
          "value": "csharp"
        },
        {
          "type": "STRING",
          "value": "d"
        },
        {
          "type": "STRING",
          "value": "dart"
        },
        {
          "type": "STRING",
          "value": "delphi"
        },
        {
          "type": "STRING",
          "value": "erl"
        },
        {
          "type": "STRING",
          "value": "go"
        },
        {
          "type": "STRING",
          "value": "haxe"
        },
        {
          "type": "STRING",
          "value": "java"
        },
        {
          "type": "STRING",
          "value": "javame"
        },
        {
          "type": "STRING",
          "value": "js"
        },
        {
          "type": "STRING",
          "value": "kotlin"
        },
        {
          "type": "STRING",
          "value": "lua"
        },
        {
          "type": "STRING",
          "value": "netcore"
        },
        {
          "type": "STRING",
          "value": "netstd"
        },
        {
          "type": "STRING",
          "value": "nodejs"
        },
        {
          "type": "STRING",
          "value": "nodets"
        },
        {
          "type": "STRING",
          "value": "noexist"
        },
        {
          "type": "STRING",
          "value": "ocaml"
        },
        {
          "type": "STRING",
          "value": "perl"
        },
        {
          "type": "STRING",
          "value": "php"
        },
        {
          "type": "STRING",
          "value": "php.path"
        },
        {
          "type": "STRING",
          "value": "py"
        },
        {
          "type": "STRING",
          "value": "py.twisted"
        },
        {
          "type": "STRING",
          "value": "rb"
        },
        {
          "type": "STRING",
          "value": "rs"
        },
        {
          "type": "STRING",
          "value": "smalltalk.prefix"
        },
        {
          "type": "STRING",
          "value": "smalltalk.category"
        },
        {
          "type": "STRING",
          "value": "st"
        },
        {
          "type": "STRING",
          "value": "swift"
        },
        {
          "type": "STRING",
          "value": "ts"
        },
        {
          "type": "STRING",
          "value": "xml"
        },
        {
          "type": "STRING",
          "value": "xsd"
        },
        {
          "type": "STRING",
          "value": "cocoa_prefix"
        },
        {
          "type": "STRING",
          "value": "cpp_namespace"
        },
        {
          "type": "STRING",
          "value": "csharp_namespace"
        },
        {
          "type": "STRING",
          "value": "delphi_namespace"
        },
        {
          "type": "STRING",
          "value": "java_package"
        },
        {
          "type": "STRING",
          "value": "perl_package"
        },
        {
          "type": "STRING",
          "value": "php_namespace"
        },
        {
          "type": "STRING",
          "value": "py_module"
        },
        {
          "type": "STRING",
          "value": "ruby_namespace"
        },
        {
          "type": "STRING",
          "value": "smalltalk_category"
        },
        {
          "type": "STRING",
          "value": "smalltalk_prefix"
        },
        {
          "type": "STRING",
          "value": "xsd_namespace"
        }
      ]
    },
    "annotation_scope": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "as3"
        },
        {
          "type": "STRING",
          "value": "c_glib"
        },
        {
          "type": "STRING",
          "value": "cl"
        },
        {
          "type": "STRING",
          "value": "cocoa"
        },
        {
          "type": "STRING",
          "value": "cpp"
        },
        {
          "type": "STRING",
          "value": "cpp2"
        },
        {
          "type": "STRING",
          "value": "cpp.noexist"
        },
        {
          "type": "STRING",
          "value": "csharp"
        },
        {
          "type": "STRING",
          "value": "d"
        },
        {
          "type": "STRING",
          "value": "dart"
        },
        {
          "type": "STRING",
          "value": "delphi"
        },
        {
          "type": "STRING",
          "value": "erl"
        },
        {
          "type": "STRING",
          "value": "go"
        },
        {
          "type": "STRING",
          "value": "haxe"
        },
        {
          "type": "STRING",
          "value": "java"
        },
        {
          "type": "STRING",
          "value": "javame"
        },
        {
          "type": "STRING",
          "value": "js"
        },
        {
          "type": "STRING",
          "value": "kotlin"
        },
        {
          "type": "STRING",
          "value": "lua"
        },
        {
          "type": "STRING",
          "value": "netcore"
        },
        {
          "type": "STRING",
          "value": "netstd"
        },
        {
          "type": "STRING",
          "value": "nodejs"
        },
        {
          "type": "STRING",
          "value": "nodets"
        },
        {
          "type": "STRING",
          "value": "noexist"
        },
        {
          "type": "STRING",
          "value": "ocaml"
        },
        {
          "type": "STRING",
          "value": "perl"
        },
        {
          "type": "STRING",
          "value": "php"
        },
        {
          "type": "STRING",
          "value": "php.path"
        },
        {
          "type": "STRING",
          "value": "py"
        },
        {
          "type": "STRING",
          "value": "py.twisted"
        },
        {
          "type": "STRING",
          "value": "rb"
        },
        {
          "type": "STRING",
          "value": "rs"
        },
        {
          "type": "STRING",
          "value": "smalltalk.prefix"
        },
        {
          "type": "STRING",
          "value": "smalltalk.category"
        },
        {
          "type": "STRING",
          "value": "st"
        },
        {
          "type": "STRING",
          "value": "swift"
        },
        {
          "type": "STRING",
          "value": "ts"
        },
        {
          "type": "STRING",
          "value": "xml"
        },
        {
          "type": "STRING",
          "value": "xsd"
        },
        {
          "type": "STRING",
          "value": "cocoa_prefix"
        },
        {
          "type": "STRING",
          "value": "cpp_namespace"
        },
        {
          "type": "STRING",
          "value": "csharp_namespace"
        },
        {
          "type": "STRING",
          "value": "delphi_namespace"
        },
        {
          "type": "STRING",
          "value": "java_package"
        },
        {
          "type": "STRING",
          "value": "perl_package"
        },
        {
          "type": "STRING",
          "value": "php_namespace"
        },
        {
          "type": "STRING",
          "value": "py_module"
        },
        {
          "type": "STRING",
          "value": "ruby_namespace"
        },
        {
          "type": "STRING",
          "value": "smalltalk_category"
        },
        {
          "type": "STRING",
          "value": "smalltalk_prefix"
        },
        {
          "type": "STRING",
          "value": "xsd_namespace"
        }
      ]
    },
    "namespace_uri": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "STRING",
          "value": "uri"
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "FIELD",
          "name": "uri",
          "content": {
            "type": "SYMBOL",
            "name": "string_literal"
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "definition": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "const"
        },
        {
          "type": "SYMBOL",
          "name": "typedef"
        },
        {
          "type": "SYMBOL",
          "name": "enum"
        },
        {
          "type": "SYMBOL",
          "name": "senum"
        },
        {
          "type": "SYMBOL",
          "name": "struct"
        },
        {
          "type": "SYMBOL",
          "name": "union"
        },
        {
          "type": "SYMBOL",
          "name": "exception"
        },
        {
          "type": "SYMBOL",
          "name": "service"
        }
      ]
    },
    "const": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "const"
        },
        {
          "type": "SYMBOL",
          "name": "field_type"
        },
        {
          "type": "SYMBOL",
          "name": "_const_identifier"
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "SYMBOL",
          "name": "const_value"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "annotation"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "list_separator"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "typedef": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "typedef"
        },
        {
          "type": "SYMBOL",
          "name": "definition_type"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "annotation"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          },
          "named": true,
          "value": "typedef_definition"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "annotation"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "list_separator"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "enum": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "enum"
        },
        {
          "type": "SYMBOL",
          "name": "_type_identifier"
        },
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_enum_identifier"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SEQ",
                    "members": [
                      {
                        "type": "STRING",
                        "value": "="
                      },
                      {
                        "type": "SYMBOL",
                        "name": "number"
                      }
                    ]
                  },
                  {
                    "type": "BLANK"
                  }
                ]
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "annotation"
                  },
                  {
                    "type": "BLANK"
                  }
                ]
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "list_separator"
                  },
                  {
                    "type": "BLANK"
                  }
                ]
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "}"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "annotation"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "senum": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "senum"
        },
        {
          "type": "SYMBOL",
          "name": "_type_identifier"
        },
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "string_literal"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "list_separator"
                  },
                  {
                    "type": "BLANK"
                  }
                ]
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "struct": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "struct"
        },
        {
          "type": "SYMBOL",
          "name": "_type_identifier"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "xsd_all"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "field"
              },
              {
                "type": "SYMBOL",
                "name": "recursive_field"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "}"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "annotation"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "union": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "union"
        },
        {
          "type": "SYMBOL",
          "name": "_type_identifier"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "xsd_all"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "field"
          }
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "exception": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "exception"
        },
        {
          "type": "SYMBOL",
          "name": "_type_identifier"
        },
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "field"
          }
        },
        {
          "type": "STRING",
          "value": "}"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "annotation"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "service": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "service"
        },
        {
          "type": "SYMBOL",
          "name": "_type_identifier"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": "extends"
                },
                {
                  "type": "SYMBOL",
                  "name": "_type_identifier"
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "function"
          }
        },
        {
          "type": "STRING",
          "value": "}"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "annotation"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "field": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "field_id"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "field_modifier"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "field_type"
        },
        {
          "type": "SYMBOL",
          "name": "_field_identifier"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": "="
                },
                {
                  "type": "SYMBOL",
                  "name": "const_value"
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "xsd_optional"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "xsd_nillable"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "xsd_attrs"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "annotation"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "list_separator"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "parameter": {
      "type": "SYMBOL",
      "name": "field"
    },
    "recursive_field": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "field_id"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "field_modifier"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "field_type"
        },
        {
          "type": "STRING",
          "value": "&"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        }
      ]
    },
    "field_id": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "number"
        },
        {
          "type": "STRING",
          "value": ":"
        }
      ]
    },
    "field_modifier": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "required"
        },
        {
          "type": "STRING",
          "value": "optional"
        }
      ]
    },
    "xsd_attrs": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "xsd_attrs"
        },
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "field"
          }
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "function": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "STRING",
                  "value": "oneway"
                },
                {
                  "type": "STRING",
                  "value": "async"
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "function_type"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "parameter"
          }
        },
        {
          "type": "STRING",
          "value": ")"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "throws"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "annotation"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "list_separator"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "function_type": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "field_type"
        },
        {
          "type": "STRING",
          "value": "void"
        }
      ]
    },
    "throws": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "throws"
        },
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "field"
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "field_type": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "primitive_type"
        },
        {
          "type": "SYMBOL",
          "name": "container_type"
        }
      ]
    },
    "definition_type": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "primitive_type"
        },
        {
          "type": "SYMBOL",
          "name": "container_type"
        },
        {
          "type": "SYMBOL",
          "name": "custom_type"
        }
      ]
    },
    "primitive_type": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "binary"
        },
        {
          "type": "STRING",
          "value": "bool"
        },
        {
          "type": "STRING",
          "value": "byte"
        },
        {
          "type": "STRING",
          "value": "i8"
        },
        {
          "type": "STRING",
          "value": "i16"
        },
        {
          "type": "STRING",
          "value": "i32"
        },
        {
          "type": "STRING",
          "value": "i64"
        },
        {
          "type": "STRING",
          "value": "double"
        },
        {
          "type": "STRING",
          "value": "string"
        },
        {
          "type": "STRING",
          "value": "slist"
        }
      ]
    },
    "container_type": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "map_type"
        },
        {
          "type": "SYMBOL",
          "name": "set_type"
        },
        {
          "type": "SYMBOL",
          "name": "list_type"
        }
      ]
    },
    "map_type": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "map"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "cpp_type"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "<"
        },
        {
          "type": "SYMBOL",
          "name": "field_type"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "annotation"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ","
        },
        {
          "type": "SYMBOL",
          "name": "field_type"
        },
        {
          "type": "STRING",
          "value": ">"
        }
      ]
    },
    "set_type": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "set"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "cpp_type"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "<"
        },
        {
          "type": "SYMBOL",
          "name": "field_type"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "annotation"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ">"
        }
      ]
    },
    "list_type": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "list"
        },
        {
          "type": "STRING",
          "value": "<"
        },
        {
          "type": "SYMBOL",
          "name": "field_type"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "annotation"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ">"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "cpp_type"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "cpp_type": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "cpp_type"
        },
        {
          "type": "SYMBOL",
          "name": "string_literal"
        }
      ]
    },
    "annotation": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "annotation_definition"
                    }
                  ]
                },
                {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SEQ",
                      "members": [
                        {
                          "type": "STRING",
                          "value": "="
                        },
                        {
                          "type": "ALIAS",
                          "content": {
                            "type": "SYMBOL",
                            "name": "string_literal"
                          },
                          "named": true,
                          "value": "annotation_value"
                        }
                      ]
                    },
                    {
                      "type": "BLANK"
                    }
                  ]
                }
              ]
            },
            {
              "type": "REPEAT",
              "content": {
                "type": "SEQ",
                "members": [
                  {
                    "type": "STRING",
                    "value": ","
                  },
                  {
                    "type": "SEQ",
                    "members": [
                      {
                        "type": "CHOICE",
                        "members": [
                          {
                            "type": "SYMBOL",
                            "name": "annotation_definition"
                          }
                        ]
                      },
                      {
                        "type": "CHOICE",
                        "members": [
                          {
                            "type": "SEQ",
                            "members": [
                              {
                                "type": "STRING",
                                "value": "="
                              },
                              {
                                "type": "ALIAS",
                                "content": {
                                  "type": "SYMBOL",
                                  "name": "string_literal"
                                },
                                "named": true,
                                "value": "annotation_value"
                              }
                            ]
                          },
                          {
                            "type": "BLANK"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "STRING",
                  "value": ","
                },
                {
                  "type": "BLANK"
                }
              ]
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "annotation_definition": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_annotation_identifier"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "."
              },
              {
                "type": "SYMBOL",
                "name": "_field_identifier"
              }
            ]
          }
        }
      ]
    },
    "custom_type": {
      "type": "SYMBOL",
      "name": "identifier"
    },
    "const_value": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "number"
        },
        {
          "type": "SYMBOL",
          "name": "double"
        },
        {
          "type": "SYMBOL",
          "name": "boolean"
        },
        {
          "type": "SYMBOL",
          "name": "string_literal"
        },
        {
          "type": "SYMBOL",
          "name": "const_maybe_accessor"
        },
        {
          "type": "SYMBOL",
          "name": "const_list"
        },
        {
          "type": "SYMBOL",
          "name": "const_map"
        }
      ]
    },
    "const_maybe_accessor": {
      "type": "SEQ",
      "members": [
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "_identifier_no_period"
          },
          "named": true,
          "value": "identifier"
        },
        {
          "type": "REPEAT1",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "."
              },
              {
                "type": "ALIAS",
                "content": {
                  "type": "SYMBOL",
                  "name": "identifier"
                },
                "named": true,
                "value": "enum_member"
              }
            ]
          }
        }
      ]
    },
    "numeric_operator": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "+"
        },
        {
          "type": "STRING",
          "value": "-"
        }
      ]
    },
    "number": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SEQ",
            "members": [
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "CHOICE",
                    "members": [
                      {
                        "type": "STRING",
                        "value": "-"
                      },
                      {
                        "type": "STRING",
                        "value": "+"
                      }
                    ]
                  },
                  {
                    "type": "BLANK"
                  }
                ]
              },
              {
                "type": "STRING",
                "value": "0x"
              },
              {
                "type": "PATTERN",
                "value": "[\\da-fA-F](_?[\\da-fA-F])*"
              }
            ]
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SEQ",
                "members": [
                  {
                    "type": "CHOICE",
                    "members": [
                      {
                        "type": "CHOICE",
                        "members": [
                          {
                            "type": "STRING",
                            "value": "-"
                          },
                          {
                            "type": "STRING",
                            "value": "+"
                          }
                        ]
                      },
                      {
                        "type": "BLANK"
                      }
                    ]
                  },
                  {
                    "type": "CHOICE",
                    "members": [
                      {
                        "type": "STRING",
                        "value": "0"
                      },
                      {
                        "type": "SEQ",
                        "members": [
                          {
                            "type": "CHOICE",
                            "members": [
                              {
                                "type": "STRING",
                                "value": "0"
                              },
                              {
                                "type": "BLANK"
                              }
                            ]
                          },
                          {
                            "type": "PATTERN",
                            "value": "[1-9]"
                          },
                          {
                            "type": "CHOICE",
                            "members": [
                              {
                                "type": "SEQ",
                                "members": [
                                  {
                                    "type": "CHOICE",
                                    "members": [
                                      {
                                        "type": "STRING",
                                        "value": "_"
                                      },
                                      {
                                        "type": "BLANK"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "PATTERN",
                                    "value": "\\d(_?\\d)*"
                                  }
                                ]
                              },
                              {
                                "type": "BLANK"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "PATTERN",
                "value": "\\d(_?\\d)*"
              },
              {
                "type": "SEQ",
                "members": [
                  {
                    "type": "CHOICE",
                    "members": [
                      {
                        "type": "CHOICE",
                        "members": [
                          {
                            "type": "STRING",
                            "value": "-"
                          },
                          {
                            "type": "STRING",
                            "value": "+"
                          }
                        ]
                      },
                      {
                        "type": "BLANK"
                      }
                    ]
                  },
                  {
                    "type": "PATTERN",
                    "value": "\\d(_?\\d)*"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    "double": {
      "type": "PATTERN",
      "value": "[+-]?(\\d+(\\.\\d+)?|\\.\\d+)([Ee][+-]?\\d+)?"
    },
    "boolean": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "true"
        },
        {
          "type": "STRING",
          "value": "false"
        }
      ]
    },
    "const_list": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "const_value"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "list_separator"
                  },
                  {
                    "type": "BLANK"
                  }
                ]
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "]"
        }
      ]
    },
    "const_map": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "const_value"
              },
              {
                "type": "STRING",
                "value": ":"
              },
              {
                "type": "SYMBOL",
                "name": "const_value"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "list_separator"
                  },
                  {
                    "type": "BLANK"
                  }
                ]
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "string_literal": {
      "type": "PATTERN",
      "value": "\"([^\"\\\\]|\\\\.)*\"|'([^'\\\\]|\\\\.)*'"
    },
    "include_path": {
      "type": "SYMBOL",
      "name": "string_literal"
    },
    "identifier": {
      "type": "PATTERN",
      "value": "[A-Za-z_][A-Za-z0-9._]*"
    },
    "_identifier_no_period": {
      "type": "PATTERN",
      "value": "[A-Za-z_][A-Za-z0-9_]*"
    },
    "_annotation_identifier": {
      "type": "ALIAS",
      "content": {
        "type": "SYMBOL",
        "name": "identifier"
      },
      "named": true,
      "value": "annotation_identifier"
    },
    "_const_identifier": {
      "type": "ALIAS",
      "content": {
        "type": "SYMBOL",
        "name": "identifier"
      },
      "named": true,
      "value": "const_identifier"
    },
    "_enum_identifier": {
      "type": "ALIAS",
      "content": {
        "type": "SYMBOL",
        "name": "identifier"
      },
      "named": true,
      "value": "enum_identifier"
    },
    "_field_identifier": {
      "type": "ALIAS",
      "content": {
        "type": "SYMBOL",
        "name": "identifier"
      },
      "named": true,
      "value": "field_identifier"
    },
    "_type_identifier": {
      "type": "ALIAS",
      "content": {
        "type": "SYMBOL",
        "name": "identifier"
      },
      "named": true,
      "value": "type_identifier"
    },
    "st_identifier": {
      "type": "PATTERN",
      "value": "[A-Za-z_][A-Za-z0-9._-]*"
    },
    "list_separator": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": ","
        },
        {
          "type": "STRING",
          "value": ";"
        }
      ]
    },
    "comment": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "#"
              },
              {
                "type": "PATTERN",
                "value": "(\\\\(.|\\r?\\n)|[^\\\\\\n])*"
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "//"
              },
              {
                "type": "PATTERN",
                "value": "(\\\\(.|\\r?\\n)|[^\\\\\\n])*"
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "/*"
              },
              {
                "type": "PATTERN",
                "value": "[^*]*\\*+([^/*][^*]*\\*+)*"
              },
              {
                "type": "STRING",
                "value": "/"
              }
            ]
          }
        ]
      }
    },
    "invalid": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "BEGIN"
        },
        {
          "type": "STRING",
          "value": "END"
        },
        {
          "type": "STRING",
          "value": "__CLASS__"
        },
        {
          "type": "STRING",
          "value": "__DIR__"
        },
        {
          "type": "STRING",
          "value": "__FILE__"
        },
        {
          "type": "STRING",
          "value": "__FUNCTION__"
        },
        {
          "type": "STRING",
          "value": "__LINE__"
        },
        {
          "type": "STRING",
          "value": "__METHOD__"
        },
        {
          "type": "STRING",
          "value": "__NAMESPACE__"
        },
        {
          "type": "STRING",
          "value": "abstract"
        },
        {
          "type": "STRING",
          "value": "alias"
        },
        {
          "type": "STRING",
          "value": "and"
        },
        {
          "type": "STRING",
          "value": "args"
        },
        {
          "type": "STRING",
          "value": "as"
        },
        {
          "type": "STRING",
          "value": "assert"
        },
        {
          "type": "STRING",
          "value": "begin"
        },
        {
          "type": "STRING",
          "value": "break"
        },
        {
          "type": "STRING",
          "value": "case"
        },
        {
          "type": "STRING",
          "value": "catch"
        },
        {
          "type": "STRING",
          "value": "class"
        },
        {
          "type": "STRING",
          "value": "clone"
        },
        {
          "type": "STRING",
          "value": "continue"
        },
        {
          "type": "STRING",
          "value": "declare"
        },
        {
          "type": "STRING",
          "value": "def"
        },
        {
          "type": "STRING",
          "value": "default"
        },
        {
          "type": "STRING",
          "value": "del"
        },
        {
          "type": "STRING",
          "value": "delete"
        },
        {
          "type": "STRING",
          "value": "do"
        },
        {
          "type": "STRING",
          "value": "dynamic"
        },
        {
          "type": "STRING",
          "value": "elif"
        },
        {
          "type": "STRING",
          "value": "else"
        },
        {
          "type": "STRING",
          "value": "elseif"
        },
        {
          "type": "STRING",
          "value": "elsif"
        },
        {
          "type": "STRING",
          "value": "end"
        },
        {
          "type": "STRING",
          "value": "enddeclare"
        },
        {
          "type": "STRING",
          "value": "endfor"
        },
        {
          "type": "STRING",
          "value": "endforeach"
        },
        {
          "type": "STRING",
          "value": "endif"
        },
        {
          "type": "STRING",
          "value": "endswitch"
        },
        {
          "type": "STRING",
          "value": "endwhile"
        },
        {
          "type": "STRING",
          "value": "ensure"
        },
        {
          "type": "STRING",
          "value": "except"
        },
        {
          "type": "STRING",
          "value": "exec"
        },
        {
          "type": "STRING",
          "value": "finally"
        },
        {
          "type": "STRING",
          "value": "float"
        },
        {
          "type": "STRING",
          "value": "for"
        },
        {
          "type": "STRING",
          "value": "foreach"
        },
        {
          "type": "STRING",
          "value": "from"
        },
        {
          "type": "STRING",
          "value": "function"
        },
        {
          "type": "STRING",
          "value": "global"
        },
        {
          "type": "STRING",
          "value": "goto"
        },
        {
          "type": "STRING",
          "value": "if"
        },
        {
          "type": "STRING",
          "value": "implements"
        },
        {
          "type": "STRING",
          "value": "import"
        },
        {
          "type": "STRING",
          "value": "in"
        },
        {
          "type": "STRING",
          "value": "inline"
        },
        {
          "type": "STRING",
          "value": "instanceof"
        },
        {
          "type": "STRING",
          "value": "interface"
        },
        {
          "type": "STRING",
          "value": "is"
        },
        {
          "type": "STRING",
          "value": "lambda"
        },
        {
          "type": "STRING",
          "value": "module"
        },
        {
          "type": "STRING",
          "value": "native"
        },
        {
          "type": "STRING",
          "value": "new"
        },
        {
          "type": "STRING",
          "value": "next"
        },
        {
          "type": "STRING",
          "value": "nil"
        },
        {
          "type": "STRING",
          "value": "not"
        },
        {
          "type": "STRING",
          "value": "or"
        },
        {
          "type": "STRING",
          "value": "package"
        },
        {
          "type": "STRING",
          "value": "pass"
        },
        {
          "type": "STRING",
          "value": "print"
        },
        {
          "type": "STRING",
          "value": "private"
        },
        {
          "type": "STRING",
          "value": "protected"
        },
        {
          "type": "STRING",
          "value": "public"
        },
        {
          "type": "STRING",
          "value": "raise"
        },
        {
          "type": "STRING",
          "value": "redo"
        },
        {
          "type": "STRING",
          "value": "rescue"
        },
        {
          "type": "STRING",
          "value": "retry"
        },
        {
          "type": "STRING",
          "value": "register"
        },
        {
          "type": "STRING",
          "value": "return"
        },
        {
          "type": "STRING",
          "value": "self"
        },
        {
          "type": "STRING",
          "value": "sizeof"
        },
        {
          "type": "STRING",
          "value": "static"
        },
        {
          "type": "STRING",
          "value": "super"
        },
        {
          "type": "STRING",
          "value": "switch"
        },
        {
          "type": "STRING",
          "value": "synchronized"
        },
        {
          "type": "STRING",
          "value": "then"
        },
        {
          "type": "STRING",
          "value": "this"
        },
        {
          "type": "STRING",
          "value": "throw"
        },
        {
          "type": "STRING",
          "value": "transient"
        },
        {
          "type": "STRING",
          "value": "try"
        },
        {
          "type": "STRING",
          "value": "undef"
        },
        {
          "type": "STRING",
          "value": "unless"
        },
        {
          "type": "STRING",
          "value": "unsigned"
        },
        {
          "type": "STRING",
          "value": "until"
        },
        {
          "type": "STRING",
          "value": "use"
        },
        {
          "type": "STRING",
          "value": "var"
        },
        {
          "type": "STRING",
          "value": "virtual"
        },
        {
          "type": "STRING",
          "value": "volatile"
        },
        {
          "type": "STRING",
          "value": "when"
        },
        {
          "type": "STRING",
          "value": "while"
        },
        {
          "type": "STRING",
          "value": "with"
        },
        {
          "type": "STRING",
          "value": "xor"
        },
        {
          "type": "STRING",
          "value": "yield"
        }
      ]
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s|\\\\\\r?\\n"
    },
    {
      "type": "SYMBOL",
      "name": "comment"
    },
    {
      "type": "SYMBOL",
      "name": "invalid"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [
    "_annotation_identifier",
    "_const_identifier",
    "_enum_identifier",
    "_field_identifier",
    "_type_identifier"
  ],
  "supertypes": []
}

